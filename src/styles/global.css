@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --header-height: 72px; /* 48px (py-6) + 24px for content */
  --header-height-mobile: 56px; /* 32px (py-6) + 24px for content */
  --main-top-padding: 80px; /* pt-20 */
  --main-bottom-padding: 80px; /* pb-20 */
}

html {
  overflow-y: scroll;
  color-scheme: light;
}

html.dark {
  color-scheme: dark;
}

html,
body {
  @apply size-full;
}

body {
  @apply font-sans antialiased;
  @apply flex flex-col;
  @apply bg-white dark:bg-stone-900;
  @apply text-black/50 dark:text-white/75;
}

header {
  @apply relative top-0 left-0 right-0 z-50 py-5;
  @apply bg-white/75 dark:bg-stone-900/25;
  @apply backdrop-blur-sm saturate-200;
}

main {
  @apply flex-1 pt-20 pb-20;
  /* Add extra bottom padding for mobile navigation */
  @apply pb-20 md:pb-32;
  /* Reduce top padding on mobile since header is hidden */
  @apply pt-8 md:pt-24;
  /* Use CSS variables for more precise control */
  padding-top: calc(var(--header-height) + 1rem);
  padding-bottom: var(--main-bottom-padding);
}

footer {
  @apply py-5 text-sm;
}

article {
  @apply max-w-full prose dark:prose-invert prose-img:mx-auto prose-img:my-auto;
  @apply prose-headings:font-semibold prose-p:font-serif prose-li:font-serif prose-ul:font-serif prose-ol:font-serif;
  @apply prose-headings:text-black prose-headings:dark:text-white;
}

/* Set max-width for images in project pages */
article img {
  @apply max-w-full;
  max-width: 800px;
  height: auto;
}

/* Ensure images are responsive on smaller screens */
@media (max-width: 768px) {
  article img {
    max-width: 100%;
  }
}

/* Navigation hover effect */
nav a {
  position: relative;
}

nav a::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 1px;
  width: 100%;
  height: 1px;
  background-color: currentColor;
  transform: scaleX(0);
  transition: transform 0.3s ease;
  transform-origin: right;
}

nav a:hover::after {
  transform-origin: left;
  transform: scaleX(1);
}

@layer utilities {
  article a {
    @apply font-sans text-current underline underline-offset-1 decoration-1;
    @apply decoration-black/15 dark:decoration-white/30;
    @apply transition-colors duration-300 ease-in-out;
  }
  article a:hover {
    @apply text-black dark:text-white;
    @apply decoration-black/25 dark:decoration-white/50;
  }
}

.animate {
  @apply opacity-0 translate-y-3;
  @apply transition-all duration-700 ease-out;
}

.animate.show {
  @apply opacity-100 translate-y-0;
}

html #back-to-top {
  @apply opacity-0 pointer-events-none;
}

html.scrolled #back-to-top {
  @apply opacity-100 pointer-events-auto;
}

/* libre-caslon-text-regular - latin */
@font-face {
  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
  font-family: 'Libre Caslon Text';
  font-style: normal;
  font-weight: 400;
  src: url('../fonts/libre.woff2') format('woff2'); /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}

/* ba font */
@font-face {
  font-display: swap;
  font-family: 'Ba';
  font-style: normal;
  font-weight: 400;
  src: url('/fonts/Ba.woff2') format('woff2');
}

/* Mobile Navigation Enhancements */
@media (max-width: 768px) {
  /* Ensure content doesn't get hidden behind mobile nav */
  body {
    padding-bottom: env(safe-area-inset-bottom);
  }
  
  /* Smooth scrolling for mobile */
  html {
    scroll-behavior: smooth;
  }
  
  /* Ensure proper touch targets for mobile navigation */
  .mobile-nav a {
    min-height: 44px;
    min-width: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Active state for current page */
  .mobile-nav a[aria-current="page"] {
    @apply text-white;
  }
  
  .mobile-nav a[aria-current="page"] span {
    @apply text-white;
  }
  
  .mobile-nav a[aria-current="page"]::before {
    content: '';
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 4px;
    background-color: currentColor;
    border-radius: 50%;
  }
  
  /* Hover and active states for better mobile UX */
  .mobile-nav a:active {
    @apply text-white scale-95;
    transition: all 0.1s ease;
  }
  
  /* Mobile-specific content adjustments */
  .container {
    overflow-x: hidden;
  }
  
  /* Ensure text doesn't overflow on mobile */
  .line-clamp-1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  /* Better mobile spacing */
  .space-y-6 > * + * {
    margin-top: 1.5rem;
  }
  
  .space-y-4 > * + * {
    margin-top: 1rem;
  }
}

/* Ensure mobile nav is above all other content */
.mobile-nav {
  z-index: 9999;
}

/* Perfect centering that accounts for the actual layout */
.perfect-center {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  margin-top: calc(-1 * var(--header-height));
  padding-top: var(--header-height);
}

.perfect-center-mobile {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  margin-top: calc(-1 * var(--header-height-mobile));
  padding-top: var(--header-height-mobile);
}

/* Alternative: Use viewport height with header offset */
.center-viewport {
  display: flex;
  align-items: center;
  justify-content: center;
  height: calc(100vh - var(--header-height));
}

.center-viewport-mobile {
  display: flex;
  align-items: center;
  justify-content: center;
  height: calc(100vh - var(--header-height-mobile));
}

/* Simple, reliable centering */
.center-content {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: calc(100vh - 120px); /* Approximate header + padding */
}

.center-content-mobile {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: calc(100vh - 100px); /* Approximate mobile header + padding */
}

/* Most reliable: Use the main element's available space */
.center-in-main {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100%;
}

/* Fix: Make container take full height and center content */
.center-container {
  height: 100%;
  min-height: calc(100vh - 120px);
  display: flex;
  align-items: center;
  justify-content: center;
}

.center-container-mobile {
  height: 100%;
  min-height: calc(100vh - 100px);
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Alternative: Use flexbox on the main element itself */
.main-center {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100%;
}

